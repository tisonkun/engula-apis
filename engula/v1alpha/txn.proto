syntax = "proto3";

package engula.v1alpha;

service Txn {
  rpc Batch(BatchTxnRequest) returns (BatchTxnResponse) {}
}

message BatchTxnRequest { repeated DatabaseTxnRequest requests = 1; }

message BatchTxnResponse { repeated DatabaseTxnResponse responses = 1; }

message DatabaseTxnRequest {
  string name = 1;
  repeated SelectCollectionRequest selects = 2;
  repeated MutateCollectionRequest mutates = 3;
}

message DatabaseTxnResponse {
  repeated SelectCollectionResponse selects = 1;
  repeated MutateCollectionResponse mutates = 2;
}

message SelectCollectionRequest {
  string name = 1;
  repeated bytes ids = 2;
  repeated SelectExpr exprs = 3;
}

message SelectCollectionResponse { repeated ValueUnion values = 1; }

message MutateCollectionRequest {
  string name = 1;
  repeated bytes ids = 2;
  repeated MutateExpr exprs = 3;
}

message MutateCollectionResponse { repeated ValueUnion values = 1; }

message SelectExpr {
  oneof expr {
    I64SelectExpr i64_expr = 1;
    F64SelectExpr f64_expr = 2;
  }
}

message MutateExpr {
  oneof expr {
    I64MutateExpr i64_expr = 1;
    F64MutateExpr f64_expr = 2;
  }
}

message I64SelectExpr {}

message I64MutateExpr { NumericCallExpr call = 1; }

message F64SelectExpr {}

message F64MutateExpr {}

message NumericCallExpr {
  NumericFunction func = 1;
  repeated ValueUnion args = 2;
}

enum NumericFunction {
  SET = 0;
  ADD = 1;
  SUB = 2;
}

message ValueUnion {
  oneof value {
    sint64 i64_value = 1;
    double f64_value = 2;
    bytes blob_value = 3;
    string text_value = 4;
    MapValue map_value = 8;
    ListValue set_value = 9;
    ListValue list_value = 10;
  }
}

message MapValue {
  ListValue keys = 1;
  ListValue values = 2;
}

message ListValue {
  repeated sint64 i64_value = 1;
  repeated double f64_value = 2;
  repeated bytes blob_value = 3;
  repeated string text_value = 4;
}
